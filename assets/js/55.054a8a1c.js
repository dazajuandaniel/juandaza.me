(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{413:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"incremental-data-autoloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#incremental-data-autoloader"}},[t._v("#")]),t._v(" Incremental Data & Autoloader")]),t._v(" "),s("p",[t._v("Important since allows to deal solely with only new data.\nAutoloader is the recommended approach by Databricks")]),t._v(" "),s("ul",[s("li",[t._v("Execute Autoloader code")]),t._v(" "),s("li",[t._v("Describe what happens when a new file arrives")]),t._v(" "),s("li",[t._v("Query a table fed by a streaming Auto Loader Query")])]),t._v(" "),s("h3",{attrs:{id:"autoloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autoloader"}},[t._v("#")]),t._v(" Autoloader")]),t._v(" "),s("p",[t._v("Minimum set of arguments")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Argument")]),t._v(" "),s("th",[t._v("Definition")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("data_source")])]),t._v(" "),s("td",[t._v("Directory of the source data")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("source_format")])]),t._v(" "),s("td",[t._v("Format of the source data")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("table_name")])]),t._v(" "),s("td",[t._v("Name of the target table")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("checkpoint_directory")])]),t._v(" "),s("td",[t._v("Location for storing metadata about the stream")])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myfunct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" checkpoint_directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" table_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        spark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readStream\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cloudFiles"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cloudFiles.format"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cloudFiles.schemaLocation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" checkpoint_directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("writeStream\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkpointLocation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" checkpoint_directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mergeSchema"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("once"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("table_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("awaitTermination"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Optional to block execution of next cells")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" query\n\nquery "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myfunct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data_source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my/path'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("source_format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("checkpoint_directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'other/path'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("table_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'table'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"incremental-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#incremental-data"}},[t._v("#")]),t._v(" Incremental Data")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("data stream")]),t._v(" describes any data source that grows over time:")]),t._v(" "),s("ul",[s("li",[t._v("A new JSON log file landing in S3")]),t._v(" "),s("li",[t._v("Updates to a database captured in a CDC feed")]),t._v(" "),s("li",[t._v("Events queued in a pub/sub feed")]),t._v(" "),s("li",[t._v("A CSV file of sales closed the previous day")])]),t._v(" "),s("p",[s("strong",[t._v("Basic Concepts")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("input_table")]),t._v(" -> Streaming read against")]),t._v(" "),s("li",[s("code",[t._v("query")]),t._v(" -> Defined againts the input table.")]),t._v(" "),s("li",[s("code",[t._v("results_table")]),t._v(" -> Contains the incremental state information of the stream")]),t._v(" "),s("li",[s("code",[t._v("output")]),t._v(" -> will persist updates to the results by writing to an external "),s("code",[t._v("sink")]),t._v(". A sink is a durable system")]),t._v(" "),s("li",[s("code",[t._v("trigger interval")]),t._v(" -> New rows are appended to the input table for each interval (similar to micro batches)")])]),t._v(" "),s("p",[t._v("Structured Streaming ensures end-to-end exactly-once fault-tolerance through checkpointing and "),s("code",[t._v("write ahead logs")]),t._v("\n* Streaming sinks are designed to be idempotent")]),t._v(" "),s("p",[s("strong",[t._v("Reading a Stream")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("spark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bronze'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createOrReplaceTempView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'streaming_tmp_vw'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Unsupported Operations")]),t._v("\nSome operations are not supported, it doesn't make sense to sort an infite growing table")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ORDER BY")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);