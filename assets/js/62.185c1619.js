(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{337:function(t,e,a){"use strict";a.r(e);var s=a(14),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),e("p",[t._v("Learnings from ACloud Guru's Video Guide")]),t._v(" "),e("h2",{attrs:{id:"vms-vs-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vms-vs-docker"}},[t._v("#")]),t._v(" VMs vs Docker")]),t._v(" "),e("p",[t._v("Dockers are not VMs -> They are closer to isolated processes")]),t._v(" "),e("ul",[e("li",[e("em",[t._v("VM")]),t._v("-> Isolate Systems")]),t._v(" "),e("li",[e("em",[t._v("Docker")]),t._v(" -> Isolate Process")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("Virtual Machines")])]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("Docker Containers")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Applications")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Bins/Libs")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Applications")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Multiple Guest OS")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Bins/Libs")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Hypervisor (Type 1 or 2)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Docker Daemon")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Host OS")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Host OS")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Infrastructure")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Infrastructure")])])])]),t._v(" "),e("h3",{attrs:{id:"when-to-use-docker-vms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#when-to-use-docker-vms"}},[t._v("#")]),t._v(" When to Use Docker/VMs?")]),t._v(" "),e("p",[t._v("VMs -> For testing environments or for testing things that are outside the scope of Docker (like a Firewall config since it's done on the OS configuration")]),t._v(" "),e("p",[t._v("Docker -> A component of a web application (Isolation of processes)")]),t._v(" "),e("h3",{attrs:{id:"docker-architecture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-architecture"}},[t._v("#")]),t._v(" Docker Architecture")]),t._v(" "),e("p",[t._v("Docker Daemon -> Rest API -> Docker CLI\nClient (Runs commands) -> Docker Host (Runs the daemon) -> Registry")]),t._v(" "),e("h2",{attrs:{id:"docker-image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-image"}},[t._v("#")]),t._v(" Docker Image")]),t._v(" "),e("p",[t._v("Features:")]),t._v(" "),e("ul",[e("li",[t._v("Files system + Parameters (things needed to run an application)")]),t._v(" "),e("li",[t._v("Does not have state and doesn't change")]),t._v(" "),e("li",[t._v("Gets downloaded, build and run")]),t._v(" "),e("li",[t._v("Running an Image == Container")]),t._v(" "),e("li",[t._v("Docker Image -> Class and Container -> Instance of class")]),t._v(" "),e("li",[t._v("Result of running a series of steps")]),t._v(" "),e("li",[t._v("One image, many containers")]),t._v(" "),e("li",[t._v("Containers are immutable")])]),t._v(" "),e("p",[e("strong",[t._v("Example of Non-changing State (Immutable Container)")])]),t._v(" "),e("p",[t._v("Run  the following command")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" alpine "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n")])])]),e("p",[t._v("After it has started, create a file and run "),e("code",[t._v("exit")]),t._v(". The run the command above again. Notice that the file does not exist.")]),t._v(" "),e("p",[t._v("Even if we run multiple docker containers, the files in one container will not be seen in the other container.")]),t._v(" "),e("h2",{attrs:{id:"docker-hub-docker-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-hub-docker-registry"}},[t._v("#")]),t._v(" Docker Hub (Docker Registry)")]),t._v(" "),e("p",[t._v("Like Github for Docker Images")]),t._v(" "),e("p",[t._v("Official vs Public :")]),t._v(" "),e("ul",[e("li",[t._v("Official doesn't require full namespace")])]),t._v(" "),e("h2",{attrs:{id:"docker-build-process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-build-process"}},[t._v("#")]),t._v(" Docker Build Process")]),t._v(" "),e("h3",{attrs:{id:"docker-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-file"}},[t._v("#")]),t._v(" Docker File")]),t._v(" "),e("p",[t._v("Has build steps for your application (each actionable step becomes a layer)")]),t._v(" "),e("h3",{attrs:{id:"docker-images"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-images"}},[t._v("#")]),t._v(" Docker Images")]),t._v(" "),e("p",[t._v("Are composed of "),e("strong",[t._v("multiple layers")]),t._v(" (each layer are self-contained files) and a docker images is a result of stacking all layers. Only changed layers are updated.")]),t._v(" "),e("h2",{attrs:{id:"docker-file-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-file-2"}},[t._v("#")]),t._v(" Docker File")]),t._v(" "),e("h3",{attrs:{id:"docker-commands-flags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-commands-flags"}},[t._v("#")]),t._v(" Docker Commands/Flags")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("Command/Flag")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}})])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("FROM <image>:<tag>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Allows to import base image to use")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("RUN")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Allows to run any script (Shell)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("WORKDIR")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Pass a directory path. All following instructions are run from this path")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("COPY <src> <dest>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Similar to CP in Linux")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("LABEL <key>=<value>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Allows to add metadata - Each layer creates a new layer")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("CMD")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Defines default command when docker image gets started (Executed when it's ran not built - can be overwritten using flags")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("VOLUME")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Indicates to Docker to expose a path to the container")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("-it")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Enable Docker to handle Unix Symbols and Terminal Colors and sets container to being interactive")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("-p")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Port flag "),e("code",[t._v("<bind on docker host>:<port on container>")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("-e")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Pass Environment Variable")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("--rm")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Removes container automatically after it's being stopped")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("-d")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Runs container in detached mode")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("--restart")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Indicates when to restart e.g. "),e("code",[t._v("on-failure")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("-v")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Mount a volume "),e("code",[t._v("<local directory>:<directory_in_container>")])])])])]),t._v(" "),e("p",[e("strong",[t._v("Notes")])]),t._v(" "),e("ul",[e("li",[t._v("The first non comment line in the file must be the "),e("code",[t._v("FROM")])]),t._v(" "),e("li",[t._v("Cannot copy or look at files above the docker file.")])]),t._v(" "),e("div",{staticClass:"language-docker extra-class"},[e("pre",{pre:!0,attrs:{class:"language-docker"}},[e("code",[e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" python:2.7-alpine")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir /app")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" requirements.txt requirements.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" pip install -r requirements.txt")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" . .")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LABEL")]),t._v(" mantainer="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Juan Daza <email@email.com>"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n\t  version="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VOLUME")]),t._v(" ["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/public"')]),t._v("]")]),t._v("\n\t  \n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" flask run --host=0.0.0.0 --port=5000")]),t._v("\n")])])]),e("p",[t._v("Build the image")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tag_here"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(":5000 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FLASK_APP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("app.py "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FLASK_DEBUG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("location"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/app tag_here \n")])])]),e("p",[t._v("Remove/Stop all containers")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" stop "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),e("p",[t._v("See logs command")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("id/name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v("\n")])])]),e("p",[t._v("Realtime metrics")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container stats\n")])])]),e("h4",{attrs:{id:"docker-named-volumes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-named-volumes"}},[t._v("#")]),t._v(" Docker Named Volumes")]),t._v(" "),e("p",[t._v("Allow to supply a name instead of file path and Docker will manage it in its special volumes directory. "),e("strong",[t._v("Perfect for databases")])]),t._v(" "),e("p",[t._v("Create a named volume:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" volume create "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("volume_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("volume_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" Docker Compose")]),t._v(" "),e("div",{staticClass:"language-docker extra-class"},[e("pre",{pre:!0,attrs:{class:"language-docker"}},[e("code",[t._v("version: '3'\n\nservices:\n  redis:\n    image: 'redis:3.2-alpine'\n    ports:\n      - '6379:6379'\n    volumes:\n      - 'redis:/data'\n\n  web:\n    build: .\n    depends_on:\n      - 'redis'\n    env_file:\n      - '.env'\n    ports:\n      - '5000:5000'\n    volumes:\n      - '.:/app'\n\nvolumes:\n  redis: {}\n")])])]),e("h2",{attrs:{id:"other-docker-concepts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#other-docker-concepts"}},[t._v("#")]),t._v(" Other Docker Concepts")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.docker.com/blog/advanced-dockerfiles-faster-builds-and-smaller-images-using-buildkit-and-multistage-builds/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Multi Stage Builds"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);